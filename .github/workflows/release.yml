name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - "[0-9]+.*"

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  upload_assets:
    needs: create_release
    runs-on: ${{ matrix.os }}
    name: upload-assets (${{ matrix.os }})

    strategy:
      matrix:
        include:
          - os: windows-latest
          - os: macos-latest

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Build for macos
        if: matrix.os == 'macos-latest'
        run: |
          cargo install cargo-bundle
          cargo bundle --release --format osx

      - name: Build for windows
        if: matrix.os == 'windows-latest'
        run: cargo build --release

      - name: Upload for macos
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./target/release/bundle/osx/Hed.app
          asset_name: Hed.app
          asset_content_type: application/octet-stream

      - name: Upload for windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./target/release/Hed.exe
          asset_name: Hed.exe
          asset_content_type: application/octet-stream
